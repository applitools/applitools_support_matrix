# check window with default fully with css stitching
# Generated by Ruby template
require 'selenium_helper'

RSpec.describe 'Coverage Tests' do
  let(:ufg) { false }

  it 'CheckWindowWithDefaultFullyWithCssStitching' do
    driver.get('https://applitools.github.io/demo/TestPages/FramesTestPage/')
    eyes.configure do |conf|
      conf.app_name = 'Applitools Support Matrix'
      conf.test_name = 'Window - Classic'
      conf.viewport_size = Applitools::RectangleSize.new(700, 460)
    end
    eyes.open(driver: driver)
    eyes.check(Applitools::Selenium::Target.window)
    eyes.close(true)
  end

  it 'CheckRegionByCoordinatesWithCssStitching' do
    driver.get('https://applitools.github.io/demo/TestPages/FramesTestPage/')
    eyes.configure do |conf|
      conf.app_name = 'Applitools Support Matrix'
      conf.test_name = 'Region - Classic'
      conf.viewport_size = Applitools::RectangleSize.new(700, 460)
    end
    eyes.open(driver: driver)
    eyes.check(Applitools::Selenium::Target.region(Applitools::Region.new(50, 70, 90, 110)))
    eyes.close(true)
  end

  it 'CheckFrameWithCssStitching' do
    driver.get('https://applitools.github.io/demo/TestPages/FramesTestPage/')
    eyes.configure do |conf|
      conf.app_name = 'Applitools Support Matrix'
      conf.test_name = 'Frame - Classic'
      conf.viewport_size = Applitools::RectangleSize.new(700, 460)
    end
    eyes.open(driver: driver)
    eyes.check(Applitools::Selenium::Target.frame('[name="frame1"]'))
    eyes.close(true)
  end
end

