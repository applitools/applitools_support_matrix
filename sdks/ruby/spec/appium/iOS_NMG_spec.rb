# check window with default fully with css stitching
# Generated by Ruby template
require 'appium_helper'

RSpec.describe 'Coverage Tests' do
  let(:ufg) { true }
  let(:caps) {
    api_key = ENV["APPLITOOLS_API_KEY"]
    args = '{"args": [], "env": {"DYLD_INSERT_LIBRARIES": "@executable_path/Frameworks/UFG_lib.xcframework/ios-arm64_x86_64-simulator/UFG_lib.framework/UFG_lib","NML_API_KEY":"'+ api_key +'"}}'
    caps = {
      "browserName": '',
      "platformName": 'iOS',
      "appium:platformVersion": '16.0',
      "appium:newCommandTimeout": 600,
      "appium:app": 'storage:filename=awesomeswift.app.zip',
      "appium:deviceName": 'iPhone 8 Simulator',
      "appium:automationName": 'XCUITest',
      "appium:processArguments": args,
      'sauce:options': {
        "username": ENV["SAUCE_USERNAME"],
        "accessKey": ENV["SAUCE_ACCESS_KEY"],
        "name": 'Support Matrix Ruby'
      }

    }
    caps
  }
  let(:iphone_8) {Applitools::Selenium::IosDeviceInfo.new(device_name: IosDeviceName::IPhone_8, screen_orientation: Orientation::PORTRAIT)}

  it 'Window' do
    eyes.configure do |conf|
      conf.app_name = 'Applitools Support Matrix'
      conf.test_name = 'Appium iOS window - UFG (Ruby)'
      conf.add_mobile_device(iphone_8)
    end
    eyes.open(driver: driver)
    eyes.check(Applitools::Appium::Target.window)
    eyes.close(true)
  end

end

