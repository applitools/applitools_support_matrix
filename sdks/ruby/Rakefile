#!/usr/bin/env rake
# frozen_string_literal: true

require 'rake/clean'
require 'securerandom'


task :default => ['github:test']

namespace 'github' do
  task :set_batch_info do
    batch_id = SecureRandom.uuid
    # ENV['APPLITOOLS_DONT_CLOSE_BATCHES'] = 'true'
    ENV['APPLITOOLS_BATCH_ID'] = batch_id unless ENV['APPLITOOLS_BATCH_ID'] && !ENV['APPLITOOLS_BATCH_ID'].empty?
    ENV['APPLITOOLS_BATCH_NAME'] = "Eyes Ruby SDK(#{RUBY_VERSION} | #{RUBY_PLATFORM})"
  end

  task :check_batch do
    puts "Batch ID: #{ENV['APPLITOOLS_BATCH_ID']}"
    puts "Batch NAME: #{ENV['APPLITOOLS_BATCH_NAME']}"
  end

  task :test => [:set_batch_info, :check_batch] do
    sh('bundle exec parallel_rspec -n 2 -- spec/selenium/*_spec.rb')
  end

  task :appium => [:set_batch_info, :check_batch] do
    sh('bundle exec parallel_rspec -n 1 -- spec/appium/*_spec.rb')
  end

  task :android_classic => [:set_batch_info, :check_batch] do
    sh('bundle exec parallel_rspec -n 1 -- spec/appium/Android_Classic_spec.rb')
  end

  task :android_nmg => [:set_batch_info, :check_batch] do
    sh('bundle exec parallel_rspec -n 1 -- spec/appium/Android_NMG_spec.rb')
  end

  task :ios_classic => [:set_batch_info, :check_batch] do
    sh('bundle exec parallel_rspec -n 1 -- spec/appium/iOS_Classic_spec.rb')
  end

  task :ios_nmg => [:set_batch_info, :check_batch] do
    sh('bundle exec parallel_rspec -n 1 -- spec/appium/iOS_NMG_spec.rb')
  end
end