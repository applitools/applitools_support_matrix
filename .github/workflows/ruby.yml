name: Ruby

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      APPLITOOLS_API_KEY:
        required: true

permissions:
  contents: read

jobs:
  batch_id:
    name: Batch_id
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.uuid }}
    steps:
      - name: generate uuid
        id: uuid
        run: |
          echo "uuid=$(uuidgen)" >> $GITHUB_OUTPUT
  test:
    needs: batch_id
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [ '2.6' ]
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    env:
      APPLITOOLS_DONT_CLOSE_BATCHES: true
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      APPLITOOLS_BATCH_ID: ${{needs.batch_id.outputs.uuid}}
    defaults:
      run:
        shell: bash
    name: ${{ matrix.ruby-version }} | ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Install gems
        working-directory: sdks/ruby
        run: |
          bundle install
      - name: Start Selenium Server
        uses: ./.github/actions/start_selenium
      - name: Log extra info
        id: logging
        run: |
          chromedriver --version
          echo "chromedriver_version=$(chromedriver --version)" >> $GITHUB_OUTPUT
          if [ "$RUNNER_OS" == "Linux" ]; then
               google-chrome --version
               echo "chrome_version=$(google-chrome --version)" >> $GITHUB_OUTPUT
          elif [ "$RUNNER_OS" == "Windows" ]; then
               echo "Getting chrome version isn't supported for windows (((("
               echo "chrome_version=not_supported_on_windows" >> $GITHUB_OUTPUT
          elif [ "$RUNNER_OS" == "macOS" ]; then
               /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version 
               echo "chrome_version=$(/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version)" >> $GITHUB_OUTPUT
          else
               echo "$RUNNER_OS not supported"
               exit 1
          fi
      - name: Logging version generation
        uses: ./.github/actions/log_data_json
        with:
          os: ${{runner.os}}
          title: ${{ format('Ruby SDK [{0}] [ruby version {1}]', runner.os, matrix.ruby-version) }}
          selenium: '4'
          chrome_version: ${{ steps.logging.outputs.chrome_version }}
          chromedriver_version: ${{ steps.logging.outputs.chromedriver_version }}
      - name: Run tests
        working-directory: sdks/ruby
        run: |
          bundle exec rake