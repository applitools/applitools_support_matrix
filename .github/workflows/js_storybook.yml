name: JS Storybook

on:
  workflow_dispatch:
    inputs:
      last_passed:
        description: ' Check to make last passed run'
        default: false
        required: true
        type: boolean
  workflow_call:
    inputs:
      last_passed:
        description: 'choose which version of the frameworks should be used (latest | last passed)'
        default: false
        required: true
        type: boolean
    secrets:
      APPLITOOLS_API_KEY:
        required: true

permissions:
  contents: read

env:
  work_dir: 'sdks/js/eyes-storybook'

jobs:
  setup:
    uses: ./.github/workflows/selenium_setup.yml
    with:
      last_passed: ${{ inputs.last_passed }}
      work_dir: 'sdks/js/eyes-storybook'
  test:
    needs: setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    env:
      APPLITOOLS_DONT_CLOSE_BATCHES: true
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
      APPLITOOLS_BRANCH_NAME: ${{matrix.branch}}
    name: ${{matrix.os}} | ${{matrix.version}}
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Framework install
        id: install
        uses: ./.github/actions/install_npm_package
        with:
          package: '@storybook/react'
          version: ${{matrix.version}}
          working-directory: ${{matrix.work_dir}}
      - name: Run Install
        run: npm install
      - name: Log installed packages
        run: npm ls
      - name: Logging version generation
        uses: ./.github/actions/log_data_json
        with:
          package: ${{ steps.install.outputs.package_name }}
          version: ${{ steps.install.outputs.package_version }}
          os: ${{runner.os}}
          matrix_os: ${{matrix.os}}
          work_dir: ${{matrix.work_dir}}
          title: ${{ format('Storybook version {1} [{0}] [nodejs {2}]', runner.os, steps.install.outputs.package_version, matrix.node-version) }}
          selenium: 'None'
      - name: Run tests
        run: npm test