name: Check Support_Matrix_Execution

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.uuid }}
      web: ${{ steps.matrix.outputs.web}}
      appium: ${{ steps.matrix.outputs.appium}}
    steps:
      - name: generate uuid
        id: uuid
        run: |
          echo "uuid=$(uuidgen)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
      - name: generate matrix
        id: matrix
        uses: ./.github/actions/setup
        with:
          work_dir: 'sdks/js/eyes-webdriverio, sdks/js/eyes-testcafe, sdks/js/eyes-storybook, sdks/js/eyes-puppeteer, sdks/js/eyes-protractor, sdks/js/eyes-playwright, sdks/js/eyes-nightwatch, sdks/js/eyes-cypress, sdks/js/eyes-selenium, sdks/python, sdks/java, sdks/dotnet, sdks/ruby'
          last_passed: ${{inputs.last_passed}}
  web:
    needs: setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.web) }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    env:
      APPLITOOLS_DONT_CLOSE_BATCHES: true
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
      JS_TESTS_CONFIG_NAME: ${{matrix.js_config}}
    name: ${{ matrix.job_name }}
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Test
        uses: ./.github/actions/test_runner
        with:
          lang: ${{matrix.test_runner}}
          eyes_version: ${{inputs.eyes_version}}
  appium:
    needs: setup
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.appium) }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    env:
      APPLITOOLS_DONT_CLOSE_BATCHES: true
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
      JS_TESTS_CONFIG_NAME: ${{matrix.js_config}}
      SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
      SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
    name: ${{ matrix.job_name }}
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Test
        uses: ./.github/actions/test_runner
        with:
          lang: ${{matrix.test_runner}}
          eyes_version: ${{inputs.eyes_version}}
#  failing_check:
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#         sleep 60
#         exit 0
  report_generation:
    if: always()
    needs: [
        web,
        appium
    ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Report generation
        uses: ./.github/actions/report
        with:
          token: ${{secrets.PAT}}
          run_id: ${{github.run_id}}
      - name: Last passed data update
        uses: ./.github/actions/make_last_passed_data
        with:
          token: ${{secrets.PAT}}
          run_id: ${{github.event.inputs.run_id}}
      - name: Check files
        run: |
          pwd
          sleep 20
          ls
          cat last_passed.json
#          git config --global user.name 'AutoSupport'
#          git config --global user.email 'autosupport@noreply.github.com'
#          git status
#          git add last_passed.json
#          git commit -m "Update last_passed.json file with the latest data"
#          git push
      - name: Upload report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: report.html
  email_notification_on_fail:
    if: failure()
    needs: report_generation
    runs-on: ubuntu-latest
    steps:
      - run: echo Reporting a failure
      - run: echo $TEST_VAR
      - name: Download report as artifact
        uses: actions/download-artifact@v3
        with:
          name: report
      - name: Send mail
        if: github.run_attempt > 1
        uses: dawidd6/action-send-mail@v3
        with:
            server_address: smtp.gmail.com
            server_port: 465
            username: ${{ secrets.EMAIL_USERNAME }}
            password: ${{ secrets.EMAIL_PASSWORD }}
            subject: SUPPORT MATRIX run has failed job
            body: Test run check  !!!!!! Workflow ${{ github.workflow }} of ${{ github.repository }}. See attachments for the report to the results
            html_body: Test run check !!!!!!! Workflow ${{ github.workflow }} of ${{ github.repository }} <br>
                       See attachments for the report to the results
            attachments: report.html
            to: tranduil15@gmail.com
            from: Artem
  email_notification_on_success:
    needs: report_generation
    runs-on: ubuntu-latest
    steps:
      - run: echo Reporting a failure
      - run: echo $TEST_VAR
      - name: Download report as artifact
        uses: actions/download-artifact@v3
        with:
          name: report
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
            server_address: smtp.gmail.com
            server_port: 465
            username: ${{ secrets.EMAIL_USERNAME }}
            password: ${{ secrets.EMAIL_PASSWORD }}
            subject: SUPPORT MATRIX run has success job
            body: Success Support Matrix run
            html_body: Success Support Matrix run
            attachments: report.html
            to: tranduil15@gmail.com
            from: Artem            
  rerun:
    if: failure()
    runs-on: ubuntu-latest
    needs: [report_generation, email_notification_on_fail]
    steps:
      - name: rerun
        if: github.run_attempt == 1
        run: curl -X POST -H "Accept:application/vnd.github+json" -H "Content-Type:application/json" -s -u "admin:${{ secrets.PAT }}" https://api.github.com/repos/${{ github.repository }}/actions/workflows/rerun_failed.yml/dispatches -d '{"ref":"${{github.ref}}", "inputs":{"run_id":"${{github.run_id}}"}}'
