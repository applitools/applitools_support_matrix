name: Check distros flow

on:
  workflow_dispatch:
  push:

permissions:
  contents: read
  
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.uuid }}
      container: ${{ steps.matrix.outputs.container}}
    steps:
      - name: generate uuid
        id: uuid
        run: |
          echo "uuid=$(uuidgen)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
      - name: generate matrix
        id: matrix
        uses: ./.github/actions/setup
        with:
#          work_dir: 'sdks/js/eyes-webdriverio, sdks/js/eyes-testcafe, sdks/js/eyes-storybook, sdks/js/eyes-puppeteer, sdks/js/eyes-protractor, sdks/js/eyes-playwright, sdks/js/eyes-nightwatch, sdks/js/eyes-cypress, sdks/js/eyes-selenium, sdks/python, sdks/java, sdks/dotnet, sdks/ruby'
          work_dir: 'sdks/js/eyes-puppeteer, sdks/js/eyes-selenium'
          last_passed: false
  distros:
    needs: setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.container) }}
    runs-on: ${{ matrix.os }}
    container: ${{matrix.container}}
    timeout-minutes: 12
    services:
      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
    env:
      APPLITOOLS_DONT_CLOSE_BATCHES: true
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
      APPLITOOLS_BRANCH_NAME: ${{matrix.branch}}
      JS_TESTS_CONFIG_NAME: ${{matrix.js_config}}
#      SELENIUM_SERVER_URL: "http://selenium:4444/wd/hub"
    name: ${{ matrix.job_name }}
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Test
        uses: ./.github/actions/test_runner
        with:
          lang: ${{matrix.test_runner}}


#  selenium:
#    defaults:
#      run:
#        shell: bash
#    runs-on: ubuntu-latest
#    name: Run Distros
#    container: artem0tranduil/alpine_runner:latest
#    env:
#      work_dir: sdks/js/eyes-puppeteer
#      APPLITOOLS_DONT_CLOSE_BATCHES: true
#      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
#      JS_TESTS_CONFIG_NAME: eyes-puppeteer
#    steps:
#      - uses: actions/checkout@v3
#      - name: Framework install
#        id: install
#        uses: ./.github/actions/install_npm_package
#        with:
#          package: puppeteer
#          version: "latest@"
#          working-directory: ${{env.work_dir}}
#          legacy_npm_peers: false
#      - name: Eyes SDK js package install
#        id: eyes
#        uses: ./.github/actions/install_npm_package
#        with:
#          package: "@applitools/eyes-puppeteer"
#          version: "latest@"
#          working-directory: ${{env.work_dir}}
#          legacy_npm_peers: false
#      - name: Pre run install
#        shell: bash
#        working-directory: ${{env.work_dir}}
#        run: npm install
#      - name: Print installed packages
#        shell: bash
#        working-directory: ${{env.work_dir}}
#        run: npm ls
#      - name: Temp fix before dockerfile update
#        run: |
#          apk update
#          apk upgrade
#          apk add --update ca-certificates
#          apk add chromium udev ttf-freefont nss freetype harfbuzz
#      - name: Run tests
#        shell: bash
#        working-directory: ${{env.work_dir}}
##        env:
##          PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium-browser
#        run: npm test