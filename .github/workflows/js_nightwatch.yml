name: JS Nightwatch

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      APPLITOOLS_API_KEY:
        required: true

permissions:
  contents: read

env:
  work_dir: 'sdks/js/eyes-nightwatch'


jobs:
  batch_id:
    name: Batch_id
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.uuid }}
    steps:
      - name: generate uuid
        id: uuid
        run: |
          echo "uuid=$(uuidgen)" >> $GITHUB_OUTPUT
  test:
    needs: batch_id
    strategy:
      fail-fast: false
      matrix:
        node-version: [ '16' ]
        os: [windows-latest, ubuntu-latest, macos-latest]
        exact: [ 1.7.13 ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    env:
      APPLITOOLS_DONT_CLOSE_BATCHES: true
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      APPLITOOLS_BATCH_ID: ${{needs.batch_id.outputs.uuid}}
    name: ${{ matrix.os }} | major ${{matrix.exact}}
    defaults:
      run:
        working-directory: ${{env.work_dir}}
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run Selenium 4
        uses: ./.github/actions/start_selenium
      - name: Framework install
        id: install
        uses: ./.github/actions/install_npm_package
        with:
          package: nightwatch
          exact: ${{matrix.exact}}
          working-directory: ${{env.work_dir}}
      - name: Run Install
        run: npm install
      - name: Log installed packages
        run: npm ls
      - name: Log extra info
        id: logging
        run: |
          chromedriver --version
          echo "chromedriver_version=$(chromedriver --version)" >> $GITHUB_OUTPUT
          if [ "$RUNNER_OS" == "Linux" ]; then
               google-chrome --version
               echo "chrome_version=$(google-chrome --version)" >> $GITHUB_OUTPUT
          elif [ "$RUNNER_OS" == "Windows" ]; then
               echo "Getting chrome version isn't supported for windows (((("
               echo "chrome_version=not_supported_on_windows" >> $GITHUB_OUTPUT
          elif [ "$RUNNER_OS" == "macOS" ]; then
               /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version 
               echo "chrome_version=$(/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version)" >> $GITHUB_OUTPUT
          else
               echo "$RUNNER_OS not supported"
               exit 1
          fi
      - name: Logging version generation
        uses: ./.github/actions/log_data_json
        with:
          package: 'Nightwatch'
          version: ${{ steps.install.outputs.package_version }}
          os: ${{runner.os}}
          title: ${{ format('Nightwatch version {1} [{0}] [nodejs {2}]', runner.os, steps.install.outputs.package_version, matrix.node-version) }}
          selenium: '4'
          chrome_version: ${{ steps.logging.outputs.chrome_version }}
          chromedriver_version: ${{ steps.logging.outputs.chromedriver_version }}
      - name: Run classic tests
        run: npm test
      - name: Run ufg tests
        run: USE_UFG=true npm test