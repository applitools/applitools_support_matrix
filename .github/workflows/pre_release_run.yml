name: JS framework group

on:
  push:
  workflow_dispatch:
    inputs:
      last_passed:
        description: ' Check to make last passed run'
        default: false
        required: true
        type: boolean
      sdk_versions_json:
        description: 'Set the sdks which should be test in support matrix'
        default: '{name: "js/eyes-cypress", version: "exact@3.36.2"}'
        required: true
  workflow_call:
    inputs:
      last_passed:
        description: 'choose which version of the frameworks should be used (latest | last passed)'
        default: false
        required: true
        type: boolean
      sdk_versions_json:
        description: 'Set the sdks which should be test in support matrix'
        default: '{name: "js/eyes-cypress", version: "exact@3.36.2"}'
        required: true
      checkout_ref:
        description: 'set ref when used from the another repo'
        default: 'ci_integration'
        required: false
        type: string

    secrets:
      APPLITOOLS_API_KEY:
        required: true
      SAUCE_USERNAME:
        required: true
      SAUCE_ACCESS_KEY:
        required: true


permissions:
  contents: read

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.uuid }}
      web: ${{ steps.matrix.outputs.web}}
      appium: ${{ steps.matrix.outputs.appium}}
      container: ${{ steps.matrix.outputs.container}}
      orientation: ${{ steps.matrix.outputs.orientation}}
    steps:
      - name: generate uuid
        id: uuid
        run: |
          echo "uuid=$(uuidgen)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
      - name: generate matrix
        id: matrix
        uses: ./.github/actions/setup
        with:
          work_dir:
          last_passed: false
  web:
    needs: setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.web) }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    env:
      APPLITOOLS_DONT_CLOSE_BATCHES: true
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
      APPLITOOLS_BRANCH_NAME: ${{matrix.branch}}
      JS_TESTS_CONFIG_NAME: ${{matrix.js_config}}
    name: ${{ matrix.job_name }}
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Test
        uses: ./.github/actions/test_runner
        with:
          lang: ${{matrix.test_runner}}
  distros:
    needs: setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.container) }}
    runs-on: ${{ matrix.os }}
    container: ${{matrix.container}}
    timeout-minutes: 10
    env:
      APPLITOOLS_DONT_CLOSE_BATCHES: true
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
      APPLITOOLS_BRANCH_NAME: ${{matrix.branch}}
      JS_TESTS_CONFIG_NAME: ${{matrix.js_config}}
    name: ${{ matrix.job_name }}
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Test
        uses: ./.github/actions/test_runner
        with:
          lang: ${{matrix.test_runner}}
#  appium:
#    needs: setup
#    strategy:
#      max-parallel: 8
#      fail-fast: false
#      matrix: ${{ fromJson(needs.setup.outputs.appium) }}
#    runs-on: ${{ matrix.os }}
#    environment: ${{matrix.gh_environment}}
#    timeout-minutes: 20
#    env:
#      APPLITOOLS_DONT_CLOSE_BATCHES: true
#      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
#      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
#      JS_TESTS_CONFIG_NAME: ${{matrix.js_config}}
#      SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
#      SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
#      APPIUM_VERSION: ${{vars.APPIUM_VERSION}}
#      MATRIX_DEVICE_ORIENTATION: ${{needs.setup.outputs.orientation}}
#    name: ${{ matrix.job_name }}
#    defaults:
#      run:
#        working-directory: ${{matrix.work_dir}}
#        shell: bash
#    steps:
#      - uses: actions/checkout@v3
#      - name: Test
#        uses: ./.github/actions/test_runner
#        with:
#          lang: ${{matrix.test_runner}}