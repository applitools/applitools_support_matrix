name: Appium

on:
  workflow_dispatch:
    inputs:
      last_passed:
        description: ' Check to make last passed run'
        default: false
        required: true
        type: boolean
  workflow_call:
    inputs:
      last_passed:
        description: 'choose which version of the frameworks should be used (latest | last passed)'
        default: false
        required: true
        type: boolean
    secrets:
      APPLITOOLS_API_KEY:
        required: true
      SAUCE_USERNAME:
        required: true
      SAUCE_ACCESS_KEY:
        required: true

permissions:
  contents: read


env:
  APPLITOOLS_DONT_CLOSE_BATCHES: true
  APPLITOOLS_API_KEY: ${{secrets.APPLITOOLS_API_KEY }}
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}


jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.uuid }}
      js: ${{ steps.js.outputs.matrix}}
      java: ${{ steps.java.outputs.matrix}}
      dotnet: ${{ steps.dotnet.outputs.matrix}}
      ruby: ${{ steps.ruby.outputs.matrix}}
      python: ${{ steps.python.outputs.matrix}}
    steps:
      - name: generate uuid
        id: uuid
        run: |
          echo "uuid=$(uuidgen)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
      - name: generate matrix
        id: js
        uses: ./.github/actions/setup
        with:
          work_dir: 'sdks/js/eyes-selenium'
          last_passed: ${{inputs.last_passed}}
          config_file: appium
      - name: generate matrix
        id: java
        uses: ./.github/actions/setup
        with:
          work_dir: 'sdks/java'
          last_passed: ${{inputs.last_passed}}
          config_file: appium
      - name: generate matrix
        id: dotnet
        uses: ./.github/actions/setup
        with:
          work_dir: 'sdks/dotnet'
          last_passed: ${{inputs.last_passed}}
          config_file: appium
      - name: generate matrix
        id: python
        uses: ./.github/actions/setup
        with:
          work_dir: 'sdks/python'
          last_passed: ${{inputs.last_passed}}
          config_file: appium
      - name: generate matrix
        id: ruby
        uses: ./.github/actions/setup
        with:
          work_dir: 'sdks/ruby'
          last_passed: ${{inputs.last_passed}}
          config_file: appium
  js:
    needs: setup
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix: ${{ fromJson(needs.setup.outputs.js) }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
      JS_TESTS_CONFIG_NAME: ${{matrix.js_config}}
      work_dir: ${{matrix.work_dir}}
    name: Javascript appium
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Logging version generation
        uses: ./.github/actions/log_data_json
        with:
          os: ${{matrix.os}}
          title: ${{ format('Javascript Appium [{0}]', runner.os) }}
          selenium: 'sauce'
      - name: Run tests
        run: |
          npm install
          npm run appium
  java:
    needs: setup
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix: ${{ fromJson(needs.setup.outputs.java) }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
    name: 'Java Appium'
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{matrix.java-version}}
          cache: 'maven'
      - name: Logging version generation
        uses: ./.github/actions/log_data_json
        with:
          os: ${{matrix.os}}
          title: ${{ format('Java Appium [{0}]  [java version 8]', runner.os) }}
          selenium: 'sauce'
      - name: Install dependency
        run: |
          mvn versions:use-latest-releases -Dincludes=com.applitools:eyes-appium-java5 -X
          mvn versions:use-latest-releases -Dincludes=com.applitools:eyes-selenium-java5 -X
      - name: Run tests
        run:  mvn test -DsuiteFile=appium.xml
  python:
    needs: setup
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix: ${{ fromJson(needs.setup.outputs.python) }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    name: 'Python Appium'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
      - name: Logging version generation
        uses: ./.github/actions/log_data_json
        with:
          os: ${{matrix.os}}
          title: ${{ format('Python Appium [{0}] [python version 3.10]', runner.os) }}
          selenium: 'sauce'
      - name: Run tests
        run: |
          pip install -r requirements.txt
          pytest -c appium.ini
  ruby:
    needs: setup
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix: ${{ fromJson(needs.setup.outputs.ruby) }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    name: 'Ruby Appium'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{matrix.ruby-version}}
          bundler-cache: true
      - name: Install gems
        run: |
          bundle install
      - name: Logging version generation
        uses: ./.github/actions/log_data_json
        with:
          os: ${{matrix.os}}
          title: ${{ format('Ruby Appium [{0}] [ruby version 2.6]', runner.os) }}
          selenium: 'sauce'
      - name: Run tests
        run: |
          bundle exec rake github:appium
  dotnet:
    needs: setup
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix: ${{ fromJson(needs.setup.outputs.dotnet) }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      APPLITOOLS_BATCH_ID: ${{needs.setup.outputs.uuid}}
    defaults:
      run:
        working-directory: ${{matrix.work_dir}}
        shell: bash
    name: Dotnet ${{ matrix.dotnet-version }} ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{matrix.dotnet-version}}
      - name: Logging version generation
        uses: ./.github/actions/log_data_json
        with:
          os: ${{matrix.os}}
          title: ${{ format('Dotnet Appium [{0}] [dotnet version 3.1.x]', runner.os) }}
          selenium: 'sauce'
      - name: Run tests
        working-directory: sdks/dotnet/appium
        run: |
          dotnet add package Eyes.Appium
          dotnet test -- NUnit.NumberOfTestWorkers=1
