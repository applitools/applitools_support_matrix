name: Java

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      APPLITOOLS_API_KEY:
        required: true

permissions:
  contents: read

jobs:
  batch_id:
    name: Batch_id
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.uuid }}
    steps:
      - name: generate uuid
        id: uuid
        run: |
          echo "uuid=$(uuidgen)" >> $GITHUB_OUTPUT
  test:
    needs: batch_id
    strategy:
      fail-fast: false
      matrix:
        java-version: [ '8' ]
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      APPLITOOLS_DONT_CLOSE_BATCHES: true
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      APPLITOOLS_BATCH_ID: ${{needs.batch_id.outputs.uuid}}
    name: ${{ matrix.java-version }} | ${{matrix.os}}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: 'maven'
      - name: Start Selenium Server
        uses: ./.github/actions/start_selenium
      - name: Log extra info
        id: logging
        run: |
          chromedriver --version
          echo "chromedriver_version=$(chromedriver --version)" >> $GITHUB_OUTPUT
          google-chrome --version
          echo "chrome_version=$(chrome --version)" >> $GITHUB_OUTPUT
      - name: Logging version generation
        uses: ./.github/actions/log_data_json
        with:
          os: ${{runner.os}}
          title: ${{ format('Java Selenium SDK [{0}] [java version {1}]', runner.os, matrix.java-version) }}
          selenium: '4'
      - name: Run tests
        working-directory: sdks/java
        run: |
          mvn versions:use-latest-releases -Dincludes=com.applitools:eyes-appium-java5
          mvn versions:use-latest-releases -Dincludes=com.applitools:eyes-selenium-java5
          mvn test